name: Build and deploj

on:
  workflow_dispatch:
  push:
#    branches: ['release']

env:
  REGISTRY: ghcr.io
  IMAGE: ghcr.io/${{ github.repository }}
  FQDN: guard.fejk.net
  JOB_NAME: guard

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and release image
        shell: bash
        run: |
          echo "Build image ${IMAGE}:${GITHUB_SHA}"

          # On master don't add the prefix
          export BRANCH="${GITHUB_REF#refs/*/}"
          if [[ "$BRANCH" == "main" ]]; then
            export PREFIX=""
          else
            export PREFIX=$(echo "${BRANCH}-" | sed 's/_/-/g')
          fi

          # Build image 
          docker build --tag ${IMAGE}:${GITHUB_SHA} .
          docker image tag ${IMAGE}:${GITHUB_SHA} ${IMAGE}:${BRANCH}

          # Push image
          docker push ${IMAGE}:${GITHUB_SHA}
          docker push ${IMAGE}:${BRANCH}

          echo "## :whale: There are available new images:" >> $GITHUB_STEP_SUMMARY
          echo "  - ${IMAGE}:${GITHUB_SHA}" >> $GITHUB_STEP_SUMMARY
          echo "  - ${IMAGE}:${GITHUB_REF#refs/*/}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Create config file for the release
          cat > ./var.tf<<EOF
          # Generated by pipeline"
          fqdn  = "${PREFIX}${FQDN}"
          image = "${IMAGE}:${GITHUB_SHA}"

          EOF

          echo ":rocket: Depolyed app will be available soon there" >> $GITHUB_STEP_SUMMARY
          echo "## ${PREFIX}${FQDN}" >> $GITHUB_STEP_SUMMARY

      - uses: actions/upload-artifact@v2
        with:
          name: deploy_vars
          path: ./var.tf

  Deploy:
    #runs-on: self-hosted
    needs: build-and-push-image
    runs-on: ubuntu-latest
    container:
      image: theztd/nomad:1.4.3
    steps:
    - uses: actions/checkout@v2
      with:
          fetch-depth: 0

    - uses: actions/download-artifact@v2
      with:
        name: deploy_vars

    - name: Prepare JOB template
      shell: bash
      run: |
        # Generate job name from branch and job
        export MY_JOB_NAME=${GITHUB_REF#refs/*/}-${JOB_NAME}

        cat deploy.nomad | sed "s/__JOB_NAME__/${MY_JOB_NAME}/g" > my_deploy.nomad

        cat my_deploy.nomad


    - name: Plan JOB
      shell: bash
      run: |
        # Test
        cat var.tf

        # Plan job
        nomad plan -var-file var.tf my_deploy.nomad || true
        

      env:
        NOMAD_ADDR: ${{ secrets.NOMAD_ADDR }}
        NOMAD_TOKEN: ${{ secrets.NOMAD_TOKEN }}
    
    - name: Deploy JOB
      run: |
        # Deploy job
        nomad run -var-file var.tf my_deploy.nomad

        # Print information, where the application should run
        echo "deploy image ${IMAGE}:${GITHUB_SHA} to ${PREFIX}${FQDN}"

        # Test
        echo ":boom: Deploy has been finished!!! :boom:" >> $GITHUB_STEP_SUMMARY

      env:
        NOMAD_ADDR: ${{ secrets.NOMAD_ADDR }}
        NOMAD_TOKEN: ${{ secrets.NOMAD_TOKEN }}
